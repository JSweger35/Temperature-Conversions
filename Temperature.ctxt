#BlueJ class context
comment0.target=Temperature
comment0.text=\n\ Write\ a\ description\ of\ class\ Temperature\ here.\n\ Temperature\ stores\ a\ temperature\ in\ Fahrenheit,\ Celsius,\ and\ Kelvin\ scales.\n\ @author\ Jake\ Sweger\n\ @version\ Version\ 1.0\n
comment1.params=
comment1.target=Temperature()
comment1.text=\n\ Default\ constructor\ for\ Temperature\ sets\ the\ default\n\ value\ of\ the\ Temperature\ object\ to\ 0.0\ degrees\n\ Fahrenheit\ with\ Celsius\ and\ Kelvin\ equivalents\n
comment2.params=degrees
comment2.target=Temperature(double)
comment2.text=\n\ This\ constructor\ for\ Temperature\ sets\ the\ Fahrenheit\n\ value\ to\ the\ value\ from\ degrees,\ then\ calculates\n\ equivalent\ Celsius\ and\ Kelvin\ values\ using\ the\ method\n\ setDegreesFahrenheit()\n\ \n\ @param\ degrees\ degrees\ Fahrenheit\n
comment3.params=degrees
comment3.target=void\ setDegreesFahrenheit(double)
comment3.text=\n\ The\ setDegreesFahrenheit\ method\ sets\ the\ Fahrenheit\ temperature\n\ \n\ @param\ degrees\ The\ Fahrenheit\ value\ to\ store\ \n
comment4.params=
comment4.target=double\ getDegreesCelsius()
comment4.text=\n\ getDegreesCelsius\ retrieves\ the\ Celsius\ temperature\ value\n\ \n\ @return\ a\ double\ value\ containing\ the\ Celsius\ temperature\n
comment5.params=
comment5.target=double\ getDegreesKelvin()
comment5.text=\n\ getDegreesKelvin\ retrieves\ the\ Kelvin\ temperature\ value\n\ \n\ @return\ a\ double\ value\ containing\ the\ Kelvin\ temperature\n
numComments=6
